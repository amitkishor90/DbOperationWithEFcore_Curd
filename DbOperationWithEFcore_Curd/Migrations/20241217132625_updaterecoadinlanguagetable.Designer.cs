// <auto-generated />
using System;
using DbOperationWithEFcore_Curd.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DbOperationWithEFcore_Curd.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241217132625_updaterecoadinlanguagetable")]
    partial class updaterecoadinlanguagetable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DbOperationWithEFcore_Curd.Data.Book", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Country")
                        .HasColumnType("int");

                    b.Property<DateOnly>("CreateDate")
                        .HasColumnType("date");

                    b.Property<string>("Descripation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int>("NoOfPages")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("LanguageId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("DbOperationWithEFcore_Curd.Data.BookPrice", b =>
                {
                    b.Property<int>("BookID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookID"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.HasKey("BookID");

                    b.ToTable("BookPrices");
                });

            modelBuilder.Entity("DbOperationWithEFcore_Curd.Data.CurrencyType", b =>
                {
                    b.Property<int>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CurrencyId"));

                    b.Property<string>("Descripation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CurrencyId");

                    b.ToTable("CurrencyTypes");

                    b.HasData(
                        new
                        {
                            CurrencyId = 1,
                            Descripation = "INDIA INR",
                            Title = "INR"
                        },
                        new
                        {
                            CurrencyId = 2,
                            Descripation = "Dollar",
                            Title = "Dollar"
                        },
                        new
                        {
                            CurrencyId = 3,
                            Descripation = "Euro",
                            Title = "Euro"
                        });
                });

            modelBuilder.Entity("DbOperationWithEFcore_Curd.Data.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Languages", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Hindi INDIA",
                            Title = "Hindi"
                        },
                        new
                        {
                            Id = 2,
                            Description = "English",
                            Title = "English"
                        },
                        new
                        {
                            Id = 3,
                            Description = "khota",
                            Title = "khota"
                        });
                });

            modelBuilder.Entity("DbOperationWithEFcore_Curd.Data.Book", b =>
                {
                    b.HasOne("DbOperationWithEFcore_Curd.Data.Language", "Language")
                        .WithMany("FK_Books")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("DbOperationWithEFcore_Curd.Data.Language", b =>
                {
                    b.Navigation("FK_Books");
                });
#pragma warning restore 612, 618
        }
    }
}
